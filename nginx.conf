user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log info;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$ssl_server_name '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    include /etc/nginx/conf.d/*.conf;

    # SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256';
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 1h;

    # Map SSL domains to upstreams and client certificates
    map $ssl_server_name $ssl_string {
        cluster-1.dev.power.sd.istio.space cluster-1.dev.power.sd.istio.space;
        cluster-2.dev.power.sd.istio.space cluster-2.dev.power.sd.istio.space;
    }

    # Define upstreams for each cluster
    upstream cluster-1.dev.power.sd.istio.space {
        server 192.168.182.124:6551;
    }

    upstream cluster-2.dev.power.sd.istio.space {
        server 192.168.182.124:6552;
    }
    upstream cluster-3.dev.power.sd.istio.space {
        server 192.168.182.124:6553;
    }

    # Server block for handling SSL termination
    server {
        listen 9443 ssl;
        server_name *.dev.power.sd.istio.space;

        # Dynamically select SSL certificate based on the incoming server name
        ssl_certificate /etc/nginx/certs/$ssl_server_name/server.crt;
        ssl_certificate_key /etc/nginx/certs/$ssl_server_name/server.key;
         # 允许客户端证书验证
#         ssl_verify_client on;  # 可选，根据需要决定是否强制验证客户端证书
#         ssl_trusted_certificate /etc/nginx/certs/cluster-2.dev.power.sd.istio.space/ca.crt;  # 当前目录下的 CA 证书

        location / {
            # Enable client certificates based on mapped values
            proxy_ssl_server_name on;
            proxy_ssl_certificate /etc/nginx/certs/$ssl_server_name/server.crt;
            proxy_ssl_certificate_key /etc/nginx/certs/$ssl_server_name/server.key;
#             proxy_ssl_verify on;  # 启用 SSL 验证
#             proxy_ssl_trusted_certificate /etc/nginx/certs/cluster-2.dev.power.sd.istio.space/ca.crt;  # 当前目录下的 CA 证书
#             proxy_ssl_verify_depth 2;
            proxy_ssl_name $ssl_server_name;  # 明确指定要使用的主机名


            # Set headers for proxying
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Cookie $http_cookie;

            # Use dynamically selected upstream
            proxy_pass https://$ssl_string;

        }
    }
}
